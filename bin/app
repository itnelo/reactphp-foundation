#!/usr/bin/env php
<?php

/*
 * This file is part of the ReactPHP Foundation <https://github.com/itnelo/reactphp-foundation>.
 *
 * (c) 2020 Pavel Petrov <itnelo@gmail.com>.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @license https://opensource.org/licenses/mit MIT
 */

declare(strict_types=1);

use Foundation\Application;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;
use Symfony\Component\DependencyInjection\ParameterBag\EnvPlaceholderParameterBag;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\Yaml\Yaml;

require_once __DIR__ . '/../vendor/autoload.php';

$envFilePath = __DIR__ . '/../.env';

if (file_exists($envFilePath)) {
    (new Dotenv())->load($envFilePath);
}

$configFilePath = __DIR__ . '/../config/parameters.yml';

if (!file_exists($configFilePath)) {
    throw new RuntimeException("File 'parameters.yml' is missing. Please, put it into the 'config' directory.");
}

$parameters   = Yaml::parseFile($configFilePath);
$parameterBag = new EnvPlaceholderParameterBag($parameters);

$container = new ContainerBuilder($parameterBag);

// loading service definitions.
$definitionLoader    = new YamlFileLoader($container, new FileLocator(__DIR__ . '/../config'));
$definitionFilePaths = [
    'async/event_loop.yml',
    'services.yml',
];

foreach ($definitionFilePaths as $definitionFilePath) {
    $definitionLoader->load($definitionFilePath);
}

// we are starting an async web server with some concurrent code
// so we don't need any caching/preloading logic for this case.
$container->compile(true);

$application = new Application($container);
$application->run();
